//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.15 at 10:54:55 PM CEST 
//


package osis;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for osisAnnotation.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="osisAnnotation">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="commentary"/>
 *     &lt;enumeration value="exposition"/>
 *     &lt;enumeration value="meditation"/>
 *     &lt;enumeration value="outline"/>
 *     &lt;enumeration value="rebuttal"/>
 *     &lt;enumeration value="sermon"/>
 *     &lt;enumeration value="studyGuide"/>
 *     &lt;enumeration value="translation"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "osisAnnotation")
@XmlEnum
public enum OsisAnnotation {

    @XmlEnumValue("commentary")
    COMMENTARY("commentary"),
    @XmlEnumValue("exposition")
    EXPOSITION("exposition"),
    @XmlEnumValue("meditation")
    MEDITATION("meditation"),
    @XmlEnumValue("outline")
    OUTLINE("outline"),
    @XmlEnumValue("rebuttal")
    REBUTTAL("rebuttal"),
    @XmlEnumValue("sermon")
    SERMON("sermon"),
    @XmlEnumValue("studyGuide")
    STUDY_GUIDE("studyGuide"),
    @XmlEnumValue("translation")
    TRANSLATION("translation");
    private final String value;

    OsisAnnotation(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OsisAnnotation fromValue(String v) {
        for (OsisAnnotation c: OsisAnnotation.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
