//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.15 at 10:54:55 PM CEST 
//


package osis;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for osisNotes.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="osisNotes">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="allusion"/>
 *     &lt;enumeration value="alternative"/>
 *     &lt;enumeration value="background"/>
 *     &lt;enumeration value="citation"/>
 *     &lt;enumeration value="crossReference"/>
 *     &lt;enumeration value="devotional"/>
 *     &lt;enumeration value="encoder"/>
 *     &lt;enumeration value="exegesis"/>
 *     &lt;enumeration value="explanation"/>
 *     &lt;enumeration value="liturgical"/>
 *     &lt;enumeration value="speaker"/>
 *     &lt;enumeration value="study"/>
 *     &lt;enumeration value="translation"/>
 *     &lt;enumeration value="variant"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "osisNotes")
@XmlEnum
public enum OsisNotes {

    @XmlEnumValue("allusion")
    ALLUSION("allusion"),
    @XmlEnumValue("alternative")
    ALTERNATIVE("alternative"),
    @XmlEnumValue("background")
    BACKGROUND("background"),
    @XmlEnumValue("citation")
    CITATION("citation"),
    @XmlEnumValue("crossReference")
    CROSS_REFERENCE("crossReference"),
    @XmlEnumValue("devotional")
    DEVOTIONAL("devotional"),
    @XmlEnumValue("encoder")
    ENCODER("encoder"),
    @XmlEnumValue("exegesis")
    EXEGESIS("exegesis"),
    @XmlEnumValue("explanation")
    EXPLANATION("explanation"),
    @XmlEnumValue("liturgical")
    LITURGICAL("liturgical"),
    @XmlEnumValue("speaker")
    SPEAKER("speaker"),
    @XmlEnumValue("study")
    STUDY("study"),
    @XmlEnumValue("translation")
    TRANSLATION("translation"),
    @XmlEnumValue("variant")
    VARIANT("variant");
    private final String value;

    OsisNotes(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OsisNotes fromValue(String v) {
        for (OsisNotes c: OsisNotes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
