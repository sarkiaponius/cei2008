//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.15 at 10:54:55 PM CEST 
//


package osis;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for milestoneSe.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="milestoneSe">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="abbr"/>
 *     &lt;enumeration value="chapter"/>
 *     &lt;enumeration value="closer"/>
 *     &lt;enumeration value="div"/>
 *     &lt;enumeration value="foreign"/>
 *     &lt;enumeration value="l"/>
 *     &lt;enumeration value="lg"/>
 *     &lt;enumeration value="q"/>
 *     &lt;enumeration value="salute"/>
 *     &lt;enumeration value="seg"/>
 *     &lt;enumeration value="signed"/>
 *     &lt;enumeration value="speech"/>
 *     &lt;enumeration value="verse"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "milestoneSe")
@XmlEnum
public enum MilestoneSe {

    @XmlEnumValue("abbr")
    ABBR("abbr"),
    @XmlEnumValue("chapter")
    CHAPTER("chapter"),
    @XmlEnumValue("closer")
    CLOSER("closer"),
    @XmlEnumValue("div")
    DIV("div"),
    @XmlEnumValue("foreign")
    FOREIGN("foreign"),
    @XmlEnumValue("l")
    L("l"),
    @XmlEnumValue("lg")
    LG("lg"),
    @XmlEnumValue("q")
    Q("q"),
    @XmlEnumValue("salute")
    SALUTE("salute"),
    @XmlEnumValue("seg")
    SEG("seg"),
    @XmlEnumValue("signed")
    SIGNED("signed"),
    @XmlEnumValue("speech")
    SPEECH("speech"),
    @XmlEnumValue("verse")
    VERSE("verse");
    private final String value;

    MilestoneSe(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MilestoneSe fromValue(String v) {
        for (MilestoneSe c: MilestoneSe.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
