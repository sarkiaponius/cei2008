//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.15 at 10:54:55 PM CEST 
//


package osis;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for osisHi.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="osisHi">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="acrostic"/>
 *     &lt;enumeration value="bold"/>
 *     &lt;enumeration value="emphasis"/>
 *     &lt;enumeration value="illuminated"/>
 *     &lt;enumeration value="italic"/>
 *     &lt;enumeration value="line-through"/>
 *     &lt;enumeration value="normal"/>
 *     &lt;enumeration value="small-caps"/>
 *     &lt;enumeration value="sub"/>
 *     &lt;enumeration value="super"/>
 *     &lt;enumeration value="underline"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "osisHi")
@XmlEnum
public enum OsisHi {

    @XmlEnumValue("acrostic")
    ACROSTIC("acrostic"),
    @XmlEnumValue("bold")
    BOLD("bold"),
    @XmlEnumValue("emphasis")
    EMPHASIS("emphasis"),
    @XmlEnumValue("illuminated")
    ILLUMINATED("illuminated"),
    @XmlEnumValue("italic")
    ITALIC("italic"),
    @XmlEnumValue("line-through")
    LINE_THROUGH("line-through"),
    @XmlEnumValue("normal")
    NORMAL("normal"),
    @XmlEnumValue("small-caps")
    SMALL_CAPS("small-caps"),
    @XmlEnumValue("sub")
    SUB("sub"),
    @XmlEnumValue("super")
    SUPER("super"),
    @XmlEnumValue("underline")
    UNDERLINE("underline");
    private final String value;

    OsisHi(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OsisHi fromValue(String v) {
        for (OsisHi c: OsisHi.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
