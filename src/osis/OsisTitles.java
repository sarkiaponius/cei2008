//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.15 at 10:54:55 PM CEST 
//


package osis;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for osisTitles.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="osisTitles">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="acrostic"/>
 *     &lt;enumeration value="chapter"/>
 *     &lt;enumeration value="continued"/>
 *     &lt;enumeration value="main"/>
 *     &lt;enumeration value="parallel"/>
 *     &lt;enumeration value="psalm"/>
 *     &lt;enumeration value="runningHead"/>
 *     &lt;enumeration value="scope"/>
 *     &lt;enumeration value="sub"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "osisTitles")
@XmlEnum
public enum OsisTitles {

    @XmlEnumValue("acrostic")
    ACROSTIC("acrostic"),
    @XmlEnumValue("chapter")
    CHAPTER("chapter"),
    @XmlEnumValue("continued")
    CONTINUED("continued"),
    @XmlEnumValue("main")
    MAIN("main"),
    @XmlEnumValue("parallel")
    PARALLEL("parallel"),
    @XmlEnumValue("psalm")
    PSALM("psalm"),
    @XmlEnumValue("runningHead")
    RUNNING_HEAD("runningHead"),
    @XmlEnumValue("scope")
    SCOPE("scope"),
    @XmlEnumValue("sub")
    SUB("sub");
    private final String value;

    OsisTitles(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OsisTitles fromValue(String v) {
        for (OsisTitles c: OsisTitles.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
